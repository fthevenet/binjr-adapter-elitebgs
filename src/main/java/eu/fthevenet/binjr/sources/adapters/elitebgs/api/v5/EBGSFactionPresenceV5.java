/*
 *    Copyright 2021 Frederic Thevenet
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/*
 * Elite BGS API
 * An API for Elite BGS
 *
 * OpenAPI spec version: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package eu.fthevenet.binjr.sources.adapters.elitebgs.api.v5;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * EBGSFactionPresenceV5
 */


public class EBGSFactionPresenceV5 {
  @SerializedName("system_name")
  private String systemName;

  @SerializedName("system_name_lower")
  private String systemNameLower;

  @SerializedName("system_id")
  private String systemId;

  @SerializedName("state")
  private String state;

  @SerializedName("influence")
  private double influence;

  @SerializedName("happiness")
  private String happiness;

  @SerializedName("active_states")
  private List<EBGSStateActiveV5> activeStates;

  @SerializedName("pending_states")
  private List<EBGSStateV5> pendingStates;

  @SerializedName("recovering_states")
  private List<EBGSStateV5> recoveringStates;

  @SerializedName("conflicts")
  private List<EBGSConflictFactionV5> conflicts;

  @SerializedName("system_details")
  private EBGSSystemsV5 systemDetails;

  @SerializedName("updated_at")
  private String updatedAt;

  public EBGSFactionPresenceV5 systemName(String systemName) {
    this.systemName = systemName;
    return this;
  }

   /**
   * Get systemName
   * @return systemName
  **/

  public String getSystemName() {
    return systemName;
  }

  public void setSystemName(String systemName) {
    this.systemName = systemName;
  }

  public EBGSFactionPresenceV5 systemNameLower(String systemNameLower) {
    this.systemNameLower = systemNameLower;
    return this;
  }

   /**
   * Get systemNameLower
   * @return systemNameLower
  **/

  public String getSystemNameLower() {
    return systemNameLower;
  }

  public void setSystemNameLower(String systemNameLower) {
    this.systemNameLower = systemNameLower;
  }

  public EBGSFactionPresenceV5 systemId(String systemId) {
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/

  public String getSystemId() {
    return systemId;
  }

  public void setSystemId(String systemId) {
    this.systemId = systemId;
  }

  public EBGSFactionPresenceV5 state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/

  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public EBGSFactionPresenceV5 influence(double influence) {
    this.influence = influence;
    return this;
  }

   /**
   * Get influence
   * @return influence
  **/

  public double getInfluence() {
    return influence;
  }

  public void setInfluence(double influence) {
    this.influence = influence;
  }

  public EBGSFactionPresenceV5 happiness(String happiness) {
    this.happiness = happiness;
    return this;
  }

   /**
   * Get happiness
   * @return happiness
  **/

  public String getHappiness() {
    return happiness;
  }

  public void setHappiness(String happiness) {
    this.happiness = happiness;
  }

  public EBGSFactionPresenceV5 activeStates(List<EBGSStateActiveV5> activeStates) {
    this.activeStates = activeStates;
    return this;
  }

  public EBGSFactionPresenceV5 addActiveStatesItem(EBGSStateActiveV5 activeStatesItem) {
    if (this.activeStates == null) {
      this.activeStates = new ArrayList<EBGSStateActiveV5>();
    }
    this.activeStates.add(activeStatesItem);
    return this;
  }

   /**
   * Get activeStates
   * @return activeStates
  **/

  public List<EBGSStateActiveV5> getActiveStates() {
    return activeStates;
  }

  public void setActiveStates(List<EBGSStateActiveV5> activeStates) {
    this.activeStates = activeStates;
  }

  public EBGSFactionPresenceV5 pendingStates(List<EBGSStateV5> pendingStates) {
    this.pendingStates = pendingStates;
    return this;
  }

  public EBGSFactionPresenceV5 addPendingStatesItem(EBGSStateV5 pendingStatesItem) {
    if (this.pendingStates == null) {
      this.pendingStates = new ArrayList<EBGSStateV5>();
    }
    this.pendingStates.add(pendingStatesItem);
    return this;
  }

   /**
   * Get pendingStates
   * @return pendingStates
  **/

  public List<EBGSStateV5> getPendingStates() {
    return pendingStates;
  }

  public void setPendingStates(List<EBGSStateV5> pendingStates) {
    this.pendingStates = pendingStates;
  }

  public EBGSFactionPresenceV5 recoveringStates(List<EBGSStateV5> recoveringStates) {
    this.recoveringStates = recoveringStates;
    return this;
  }

  public EBGSFactionPresenceV5 addRecoveringStatesItem(EBGSStateV5 recoveringStatesItem) {
    if (this.recoveringStates == null) {
      this.recoveringStates = new ArrayList<EBGSStateV5>();
    }
    this.recoveringStates.add(recoveringStatesItem);
    return this;
  }

   /**
   * Get recoveringStates
   * @return recoveringStates
  **/

  public List<EBGSStateV5> getRecoveringStates() {
    return recoveringStates;
  }

  public void setRecoveringStates(List<EBGSStateV5> recoveringStates) {
    this.recoveringStates = recoveringStates;
  }

  public EBGSFactionPresenceV5 conflicts(List<EBGSConflictFactionV5> conflicts) {
    this.conflicts = conflicts;
    return this;
  }

  public EBGSFactionPresenceV5 addConflictsItem(EBGSConflictFactionV5 conflictsItem) {
    if (this.conflicts == null) {
      this.conflicts = new ArrayList<EBGSConflictFactionV5>();
    }
    this.conflicts.add(conflictsItem);
    return this;
  }

   /**
   * Get conflicts
   * @return conflicts
  **/

  public List<EBGSConflictFactionV5> getConflicts() {
    return conflicts;
  }

  public void setConflicts(List<EBGSConflictFactionV5> conflicts) {
    this.conflicts = conflicts;
  }

  public EBGSFactionPresenceV5 systemDetails(EBGSSystemsV5 systemDetails) {
    this.systemDetails = systemDetails;
    return this;
  }

   /**
   * Get systemDetails
   * @return systemDetails
  **/

  public EBGSSystemsV5 getSystemDetails() {
    return systemDetails;
  }

  public void setSystemDetails(EBGSSystemsV5 systemDetails) {
    this.systemDetails = systemDetails;
  }

  public EBGSFactionPresenceV5 updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/

  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EBGSFactionPresenceV5 ebGSFactionPresenceV5 = (EBGSFactionPresenceV5) o;
    return Objects.equals(this.systemName, ebGSFactionPresenceV5.systemName) &&
        Objects.equals(this.systemNameLower, ebGSFactionPresenceV5.systemNameLower) &&
        Objects.equals(this.systemId, ebGSFactionPresenceV5.systemId) &&
        Objects.equals(this.state, ebGSFactionPresenceV5.state) &&
        Objects.equals(this.influence, ebGSFactionPresenceV5.influence) &&
        Objects.equals(this.happiness, ebGSFactionPresenceV5.happiness) &&
        Objects.equals(this.activeStates, ebGSFactionPresenceV5.activeStates) &&
        Objects.equals(this.pendingStates, ebGSFactionPresenceV5.pendingStates) &&
        Objects.equals(this.recoveringStates, ebGSFactionPresenceV5.recoveringStates) &&
        Objects.equals(this.conflicts, ebGSFactionPresenceV5.conflicts) &&
        Objects.equals(this.systemDetails, ebGSFactionPresenceV5.systemDetails) &&
        Objects.equals(this.updatedAt, ebGSFactionPresenceV5.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(systemName, systemNameLower, systemId, state, influence, happiness, activeStates, pendingStates, recoveringStates, conflicts, systemDetails, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EBGSFactionPresenceV5 {\n");
    
    sb.append("    systemName: ").append(toIndentedString(systemName)).append("\n");
    sb.append("    systemNameLower: ").append(toIndentedString(systemNameLower)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    influence: ").append(toIndentedString(influence)).append("\n");
    sb.append("    happiness: ").append(toIndentedString(happiness)).append("\n");
    sb.append("    activeStates: ").append(toIndentedString(activeStates)).append("\n");
    sb.append("    pendingStates: ").append(toIndentedString(pendingStates)).append("\n");
    sb.append("    recoveringStates: ").append(toIndentedString(recoveringStates)).append("\n");
    sb.append("    conflicts: ").append(toIndentedString(conflicts)).append("\n");
    sb.append("    systemDetails: ").append(toIndentedString(systemDetails)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
